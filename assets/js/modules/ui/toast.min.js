import{CONFIG}from"../config.js";import{getElement,setAttributes,escapeHtml}from"../utils.js";export class ToastManager{constructor(){this.toastContainer=null,this.srAnnouncementElement=null,this.activeToasts=new Set,this.init()}init(){this.toastContainer=getElement("#toast-container"),this.srAnnouncementElement=getElement("#general-sr-announcement"),this.toastContainer||(console.warn("Toast container not found. Creating fallback container."),this.createFallbackContainer()),console.log("✅ Toast manager initialized")}createFallbackContainer(){this.toastContainer=document.createElement("div"),this.toastContainer.id="toast-container",this.toastContainer.className="fixed top-4 right-4 z-50 space-y-2",setAttributes(this.toastContainer,{"aria-live":"polite","aria-label":"Notificaciones"}),document.body.appendChild(this.toastContainer)}show(t,s="success",e=CONFIG.ANIMATIONS.TOAST_DURATION){if(!this.toastContainer)return console.warn("Toast container not available. Cannot display toast:",t),null;const n=this.createToastElement(t,s);this.toastContainer.appendChild(n),this.activeToasts.add(n),requestAnimationFrame(()=>{n.classList.add("show")});const a=setTimeout(()=>{this.dismissToast(n)},e);return n.autoHideTimeout=a,n}createToastElement(t,s){const e=document.createElement("div"),n=`toast-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;e.id=n,e.className=`toast ${s}`,setAttributes(e,{role:"alert","aria-live":"assertive","aria-atomic":"true"});const a=this.getIconForType(s);e.innerHTML=`\n            <span class="toast-icon" aria-hidden="true" style="margin-right: 8px;">${a}</span>\n            <span class="toast-message">${escapeHtml(t)}</span>\n            <button class="toast-close" aria-label="Cerrar notificación" data-toast-id="${n}">\n                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">\n                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>\n                </svg>\n            </button>\n        `;const o=e.querySelector(".toast-close");return o&&o.addEventListener("click",()=>this.dismissToast(e)),e}getIconForType(t){const s={success:"✓",error:"✕",warning:"⚠",info:"ℹ"};return s[t]||s.info}dismissToast(t){t&&this.activeToasts.has(t)&&(t.classList.remove("show"),this.activeToasts.delete(t),t.addEventListener("transitionend",()=>{t.parentNode&&t.remove()},{once:!0}),setTimeout(()=>{t.parentNode&&t.remove()},500))}success(t,s){return this.show(t,"success",s)}error(t,s){return this.show(t,"error",s)}warning(t,s){return this.show(t,"warning",s)}info(t,s){return this.show(t,"info",s)}dismissAll(){this.activeToasts.forEach(t=>this.dismissToast(t))}announce(t){this.srAnnouncementElement&&(this.srAnnouncementElement.textContent=t)}getActiveToastCount(){return this.activeToasts.size}hasActiveToastOfType(t){return[...this.activeToasts].some(s=>s.classList.contains(t))}destroy(){this.dismissAll()}}export const toast=new ToastManager;"undefined"!=typeof window&&(window.showToast=(t,s,e)=>toast.show(t,s,e));