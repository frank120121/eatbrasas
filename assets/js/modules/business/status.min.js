import{CONFIG}from"../config.js";import{getElement}from"../utils.js";export class BusinessStatus{constructor(t=null){this.showToast=t,this.statusUpdateInterval=null,this.isInitialized=!1}init(){try{this.updateBusinessStatus(),this.statusUpdateInterval=setInterval(()=>{this.updateBusinessStatus()},6e4),this.isInitialized=!0,console.log("✅ Business status functionality initialized")}catch(t){console.error("❌ Error initializing business status:",t),this.showToast&&this.showToast("Error al inicializar estado del negocio","error")}}updateBusinessStatus(){const t=this.isBusinessOpen();this.updateBusinessStatusDisplay(t),console.log("Business status updated: "+(t?"OPEN":"CLOSED"))}isBusinessOpen(){const t=new Date,e=t.getHours()+t.getMinutes()/60;return e>=CONFIG.BUSINESS.OPEN_TIME&&e<CONFIG.BUSINESS.CLOSE_TIME}getBusinessHours(){const t=Math.floor(CONFIG.BUSINESS.OPEN_TIME),e=Math.round(60*(CONFIG.BUSINESS.OPEN_TIME-t)),s=Math.floor(CONFIG.BUSINESS.CLOSE_TIME),n=Math.round(60*(CONFIG.BUSINESS.CLOSE_TIME-s)),i=(t,e)=>{const s=t>=12?"PM":"AM";return`${t>12?t-12:0===t?12:t}:${e.toString().padStart(2,"0")} ${s}`};return`${i(t,e)} - ${i(s,n)}`}getNextOpeningTime(){const t=new Date,e=t.getHours()+t.getMinutes()/60,s=new Date;return e>=CONFIG.BUSINESS.CLOSE_TIME&&s.setDate(s.getDate()+1),s.setHours(Math.floor(CONFIG.BUSINESS.OPEN_TIME),Math.round(60*(CONFIG.BUSINESS.OPEN_TIME-Math.floor(CONFIG.BUSINESS.OPEN_TIME))),0,0),s}getHoursUntilOpen(){if(this.isBusinessOpen())return 0;const t=new Date,e=this.getNextOpeningTime();return Math.ceil((e-t)/36e5)}getHoursUntilClose(){if(!this.isBusinessOpen())return 0;const t=new Date,e=new Date;return e.setHours(Math.floor(CONFIG.BUSINESS.CLOSE_TIME),Math.round(60*(CONFIG.BUSINESS.CLOSE_TIME-Math.floor(CONFIG.BUSINESS.CLOSE_TIME))),0,0),Math.ceil((e-t)/36e5)}getClosedMessage(){const t=this.getHoursUntilOpen();if(t<=12)return`Cerrado - Abre en ${t}h`;{const t=this.getNextOpeningTime(),e=new Date;return e.setDate(e.getDate()+1),e.setHours(0,0,0,0),t>=e?"Cerrado - Abre mañana a las 10:45 AM":"Cerrado - Abre hoy a las 10:45 AM"}}getOpenMessage(){const t=this.getHoursUntilClose();return t<=1?"Abierto ahora - Cierra pronto":t<=3?`Abierto ahora - Cierra en ${t}h`:"Abierto ahora"}updateBusinessStatusDisplay(t){const e=getElement(CONFIG.SELECTORS.BUSINESS.STATUS_CONTAINER),s=getElement(CONFIG.SELECTORS.BUSINESS.STATUS_INDICATOR),n=getElement(CONFIG.SELECTORS.BUSINESS.STATUS_TEXT);if(!e||!s||!n)return void console.warn("Business status elements not found");const i=t?{container:"mt-4 flex items-center space-x-3 bg-green-50 px-4 py-3 rounded-xl",indicator:"w-3 h-3 bg-green-500 rounded-full animate-pulse",text:"text-green-700 font-semibold text-sm",textContent:this.getOpenMessage()}:{container:"mt-4 flex items-center space-x-3 bg-red-50 px-4 py-3 rounded-xl",indicator:"w-3 h-3 bg-red-500 rounded-full",text:"text-red-700 font-semibold text-sm",textContent:this.getClosedMessage()};e.className=i.container,s.className=i.indicator,n.className=i.text,n.textContent=i.textContent,e.setAttribute("aria-label","Estado del negocio: "+(t?"Abierto":"Cerrado")),s.setAttribute("aria-hidden","true")}checkBusinessStatus(){if(this.updateBusinessStatus(),this.showToast){const t=this.isBusinessOpen(),e=t?this.getOpenMessage():this.getClosedMessage(),s=t?"success":"info";this.showToast(`Estado actual: ${e}`,s,4e3)}}getDetailedStatus(){const t=this.isBusinessOpen();return{isOpen:t,message:t?this.getOpenMessage():this.getClosedMessage(),businessHours:this.getBusinessHours(),hoursUntilOpen:this.getHoursUntilOpen(),hoursUntilClose:this.getHoursUntilClose(),nextOpeningTime:this.getNextOpeningTime(),lastUpdated:new Date}}scheduleStatusNotification(t="open"){if(!this.showToast)return;const e=new Date;let s;if("open"===t){if(this.isBusinessOpen())return void this.showToast("El negocio ya está abierto","info");s=this.getNextOpeningTime()}else{if(!this.isBusinessOpen())return void this.showToast("El negocio ya está cerrado","info");s=new Date,s.setHours(Math.floor(CONFIG.BUSINESS.CLOSE_TIME),Math.round(60*(CONFIG.BUSINESS.CLOSE_TIME-Math.floor(CONFIG.BUSINESS.CLOSE_TIME))),0,0)}const n=s-e;if(n>0&&n<864e5){setTimeout(()=>{if(this.showToast){const e="open"===t?"¡El negocio está ahora abierto!":"El negocio está ahora cerrado",s="open"===t?"success":"info";this.showToast(e,s,6e3)}},n);const e=Math.ceil(n/36e5);this.showToast(`Notificación programada para cuando ${"open"===t?"abra":"cierre"} (en ~${e}h)`,"info",3e3)}}destroy(){this.statusUpdateInterval&&(clearInterval(this.statusUpdateInterval),this.statusUpdateInterval=null),this.isInitialized=!1,console.log("Business status module destroyed")}}export const businessStatus=new BusinessStatus;